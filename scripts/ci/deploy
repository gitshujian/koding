#!/bin/bash

set -o errexit

cd $(dirname $0)

declare ERR_MISOPT=1 \
        ERR_AWSCLI=2 \
        ERR_CONFIG=3 \
        ERR_REGION=4 \
        ERR_ENVIRON=5 \
        ERR_UNKNOWN=255

if ! $(which aws &> /dev/null); then
  echo "error: aws is not found"
  exit $ERR_AWSCLI
fi

declare timestamp=$(date "+%Y-%m-%dT%H:%M:%S") \
        revision=$(git rev-parse --short HEAD) \

declare branch=${BRANCH:-$(git rev-parse --abbrev HEAD)}
declare config=$(jq --raw-output ".${branch}.config" map.json)

if [[ -z "$config" || "$config" == "null" ]]; then
  echo "error: config could not be set"
  exit $ERR_CONFIG
fi

# cd $KONFIG_PROJECTROOT
# $KONFIG_PROJECTROOT/configure --without-envvar
# make -C client dist

# git clean --force -d -X client go/{bin,pkg} node_modules

declare regions=$(jq --raw-output ".${branch}.environments | keys | .[]" map.json)

if [[ -z "$regions" ]]; then
  echo "error: no regions found"
  exit $ERR_REGION
fi

for region in $(echo $regions); do
  declare environments=$(jq --raw-output ".${branch}.environments[\"${region}\"] | .[]" map.json)

  if [[ -z "$environments" ]]; then
    echo "error: no environment is found"
    exit $ERR_ENVIRON
  fi

  while read -r environment; do
    declare version_label=${environment}-${timestamp}_${revision}
    echo $KONFIG_PROJECTROOT/configure \
         --without-envvars \
         --config $config \
         --ebEnvName $environment
  done < <(echo "$environments")
done

exit 0
